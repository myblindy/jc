<type> ::= int
<arraystar> ::= e
<definition2> ::= <arraystar> ;
<definition> ::= <type> id <definition2>
<type> ::= int
<arraystar> ::= e
<definition2> ::= <arraystar> ;
<definition> ::= <type> id <definition2>
<type> ::= int
<type> ::= id
<arraystar> ::= e
<fparamstailstar> ::= e
<fparams> ::= <type> id <arraystar> <fparamstailstar>
<type> ::= int
<arraystar> ::= e
<typedecl> ::= <type> id <arraystar>;
<type> ::= int
<arraystar> ::= e
<typedecl> ::= <type> id <arraystar>;
<typedeclstar> ::= e (FORCED)
<typedeclstar> ::= <typedecl><typedeclstar>
<typedeclstar> ::= <typedecl><typedeclstar>
<indicestar> ::= e
<idnest2> ::= e
<idnest> ::= id <indicestar> <idnest2>
<indicestar> ::= e
<variable> ::= <idnest> <indicestar>
<factor> ::= num
<term2> ::= e
<term> ::= <factor> <term2>
<arithexpr2> ::= e
<arithexpr> ::= <term> <arithexpr2>
<expr2> ::= e
<expr> ::= <arithexpr> <expr2>
<statement> ::= <variable> := <expr>
<indicestar> ::= e
<idnest2> ::= e
<idnest> ::= id <indicestar> <idnest2>
<indicestar> ::= e
<variable> ::= <idnest> <indicestar>
<factor> ::= num
<term2> ::= e
<term> ::= <factor> <term2>
<arithexpr2> ::= e
<arithexpr> ::= <term> <arithexpr2>
<expr2> ::= e
<expr> ::= <arithexpr> <expr2>
<statement> ::= <variable> := <expr>
<indicestar> ::= e
<idnest2> ::= e
<idnest> ::= id <indicestar> <idnest2>
<indicestar> ::= e
<factor2> ::= <indicestar>
<factor> ::= <idneststar> id <factor2>
<factor> ::= num
<term2> ::= e
<term2> ::= multop <factor> <term2>
<term> ::= <factor> <term2>
<indicestar> ::= e
<idnest2> ::= e
<idnest> ::= id <indicestar> <idnest2>
<indicestar> ::= e
<factor2> ::= <indicestar>
<factor> ::= <idneststar> id <factor2>
<term2> ::= e
<term> ::= <factor> <term2>
<arithexpr2> ::= e
<arithexpr2> ::= addop <term> <arithexpr2>
<arithexpr> ::= <term> <arithexpr2>
<expr2> ::= e
<expr> ::= <arithexpr> <expr2>
<factor> ::= ( <expr> )
<indicestar> ::= e
<idnest2> ::= e
<idnest> ::= id <indicestar> <idnest2>
<indicestar> ::= e
<factor2> ::= <indicestar>
<factor> ::= <idneststar> id <factor2>
<indicestar> ::= e
<indicestar> ::= e
<idnest2> ::= e
<idnest> ::= id <indicestar> <idnest2>
<idnest2> ::= . <idnest>
<idnest> ::= id <indicestar> <idnest2>
<indicestar> ::= e
<factor2> ::= <indicestar>
<factor> ::= <idneststar> id <factor2>
<term2> ::= e
<term2> ::= multop <factor> <term2>
<term2> ::= multop <factor> <term2>
<term> ::= <factor> <term2>
<arithexpr2> ::= e
<arithexpr> ::= <term> <arithexpr2>
<expr2> ::= e
<expr> ::= <arithexpr> <expr2>
<statement> ::= return ( <expr> ) ;
<statementstar> ::= e
<statementstar> ::= <statement><statementstar>
<statementstar> ::= <statement><statementstar>
<statementstar> ::= <statement><statementstar>
<funcbody> ::= {<typedeclstar><statementstar>}
<definition2> ::= ( <fparams> ) <funcbody> ;
<definition> ::= <type> id <definition2>
<definitionstar> ::= e
<definitionstar> ::= <definition> <definitionstar>
<definitionstar> ::= <definition> <definitionstar>
<definitionstar> ::= <definition> <definitionstar>
<classdecl> := class id { <definitionstar> } ;
<type> ::= int
<arraystar> ::= e
<definition2> ::= <arraystar> ;
<definition> ::= <type> id <definition2>
<definitionstar> ::= e
<definitionstar> ::= <definition> <definitionstar>
<classdecl> := class id { <definitionstar> } ;
<classdeclstar> ::= e
<classdeclstar> ::= <classdecl><classdeclstar>
<classdeclstar> ::= <classdecl><classdeclstar>
<type> ::= int
<arraystar> ::= e
<typedecl> ::= <type> id <arraystar>;
<type> ::= id
<arraystar> ::= e
<typedecl> ::= <type> id <arraystar>;
<type> ::= id
<arraystar> ::= e
<typedecl> ::= <type> id <arraystar>;
<typedeclstar> ::= e (FORCED)
<typedeclstar> ::= <typedecl><typedeclstar>
<typedeclstar> ::= <typedecl><typedeclstar>
<typedeclstar> ::= <typedecl><typedeclstar>
<indicestar> ::= e
<indicestar> ::= e
<idnest2> ::= e
<idnest> ::= id <indicestar> <idnest2>
<idnest2> ::= . <idnest>
<idnest> ::= id <indicestar> <idnest2>
<indicestar> ::= e
<variable> ::= <idnest> <indicestar>
<factor> ::= num
<term2> ::= e
<term> ::= <factor> <term2>
<arithexpr2> ::= e
<arithexpr> ::= <term> <arithexpr2>
<expr2> ::= e
<expr> ::= <arithexpr> <expr2>
<statement> ::= <variable> := <expr>
<indicestar> ::= e
<indicestar> ::= e
<idnest2> ::= e
<idnest> ::= id <indicestar> <idnest2>
<idnest2> ::= . <idnest>
<idnest> ::= id <indicestar> <idnest2>
<indicestar> ::= e
<variable> ::= <idnest> <indicestar>
<factor> ::= num
<term2> ::= e
<term> ::= <factor> <term2>
<arithexpr2> ::= e
<arithexpr> ::= <term> <arithexpr2>
<expr2> ::= e
<expr> ::= <arithexpr> <expr2>
<statement> ::= <variable> := <expr>
<indicestar> ::= e
<indicestar> ::= e
<idnest2> ::= e
<idnest> ::= id <indicestar> <idnest2>
<idnest2> ::= . <idnest>
<idnest> ::= id <indicestar> <idnest2>
<indicestar> ::= e
<variable> ::= <idnest> <indicestar>
<factor> ::= num
<term2> ::= e
<term> ::= <factor> <term2>
<arithexpr2> ::= e
<arithexpr> ::= <term> <arithexpr2>
<expr2> ::= e
<expr> ::= <arithexpr> <expr2>
<statement> ::= <variable> := <expr>
<indicestar> ::= e
<idnest2> ::= e
<idnest> ::= id <indicestar> <idnest2>
<indicestar> ::= e
<variable> ::= <idnest> <indicestar>
<indicestar> ::= e
<indicestar> ::= e
<idnest2> ::= e
<idnest> ::= id <indicestar> <idnest2>
<idnest2> ::= . <idnest>
<idnest> ::= id <indicestar> <idnest2>
<indicestar> ::= e
<idnest2> ::= e
<idnest> ::= id <indicestar> <idnest2>
<indicestar> ::= e
<factor2> ::= <indicestar>
<factor> ::= <idneststar> id <factor2>
<term2> ::= e
<term> ::= <factor> <term2>
<arithexpr2> ::= e
<arithexpr> ::= <term> <arithexpr2>
<aparamstailstar> ::= e
<aparams> ::= <arithexpr> <aparamstail>
<factor2> ::= ( <aparams> )
<factor> ::= <idneststar> id <factor2>
<term2> ::= e
<term> ::= <factor> <term2>
<arithexpr2> ::= e
<arithexpr> ::= <term> <arithexpr2>
<expr2> ::= e
<expr> ::= <arithexpr> <expr2>
<statement> ::= <variable> := <expr>
<indicestar> ::= e
<idnest2> ::= e
<idnest> ::= id <indicestar> <idnest2>
<indicestar> ::= e
<factor2> ::= <indicestar>
<factor> ::= <idneststar> id <factor2>
<term2> ::= e
<term> ::= <factor> <term2>
<arithexpr2> ::= e
<arithexpr> ::= <term> <arithexpr2>
<expr2> ::= e
<expr> ::= <arithexpr> <expr2>
<statement> ::= cout ( <expr> ) ;
<indicestar> ::= e
<indicestar> ::= e
<idnest2> ::= e
<idnest> ::= id <indicestar> <idnest2>
<idnest2> ::= . <idnest>
<idnest> ::= id <indicestar> <idnest2>
<indicestar> ::= e
<factor2> ::= <indicestar>
<factor> ::= <idneststar> id <factor2>
<term2> ::= e
<term> ::= <factor> <term2>
<arithexpr2> ::= e
<arithexpr> ::= <term> <arithexpr2>
<expr2> ::= e
<expr> ::= <arithexpr> <expr2>
<statement> ::= cout ( <expr> ) ;
<statementstar> ::= e
<statementstar> ::= <statement><statementstar>
<statementstar> ::= <statement><statementstar>
<statementstar> ::= <statement><statementstar>
<statementstar> ::= <statement><statementstar>
<statementstar> ::= <statement><statementstar>
<statementstar> ::= <statement><statementstar>
<funcbody> ::= {<typedeclstar><statementstar>}
<definitionstar> ::= e
<progbody> ::= program <funcbody> ; <definitionstar>
<prog> ::= <classdeclstar><progbody>
